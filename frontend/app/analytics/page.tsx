"use client";

import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Overview } from "@/components/analytics/overview";
import { CategoryDistribution } from "@/components/analytics/category-distribution";
import { MonthlyComparison } from "@/components/analytics/monthly-comparison";
import ReactMarkdown from "react-markdown";
import { useAuth } from "@clerk/nextjs";

export default function AnalyticsPage() {
  const { userId } = useAuth();
  const [insights, setInsights] = useState("");
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    // Restore insights from localStorage when the component mounts
    const savedInsights = localStorage.getItem("analyticsInsights");
    if (savedInsights) {
      setInsights(savedInsights);
    }
  }, []);

  useEffect(() => {
    // Save insights to localStorage whenever it changes
    localStorage.setItem("analyticsInsights", insights);
  }, [insights]);

  const fetchInsights = async () => {
    setLoading(true);
    setInsights("");

    try {
      const response = await fetch(
        `${process.env.NEXT_PUBLIC_ANALYTICS_URL}/insights/${userId}`
      );

      if (!response.body) {
        setLoading(false);
        return;
      }

      const reader = response.body.getReader();
      const decoder = new TextDecoder("utf-8");
      let done = false;

      while (!done) {
        const { value, done: readerDone } = await reader.read();
        done = readerDone;
        const chunk = decoder.decode(value, { stream: true });
        setInsights((prev) => prev + chunk);
      }
    } catch (error) {
      console.error("Error fetching insights:", error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="flex-1 space-y-4 p-4 md:p-8 pt-6">
      <div className="flex items-center justify-between space-y-2">
        <h2 className="text-3xl font-bold tracking-tight">AI Analytics</h2>
        <Button onClick={fetchInsights} disabled={loading}>
          {loading ? "Generating..." : "Generate AI Analytics"}
        </Button>
      </div>

      {insights && (
        <Card>
          <CardHeader>
            <CardTitle>Insights</CardTitle>
            <CardDescription>Generated by AI</CardDescription>
          </CardHeader>
          <CardContent>
            <ReactMarkdown>{insights}</ReactMarkdown>
          </CardContent>
        </Card>
      )}
    </div>
  );
}